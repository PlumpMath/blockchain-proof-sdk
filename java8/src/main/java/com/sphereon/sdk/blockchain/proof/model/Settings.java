/**
 * Sphereon :: BLOCKCHAIN :: PROOF API
 * <b>The Blockchain Proof API is an easy to prove existence of (binary) data at a certain point in time. Behinde the scenes it stores entries using the Factom (bitcoin) blockchain by means of our generic blockchain API.</b>    The flow is generally as follows:  1. Make sure a Proof chain has been created using the /chain POST endpoint beforehand. Normally you only need one or a handful of chains, during the entiry lifetime of your proof solution. This is a relative expensive operation in terms of money.  2. Store proof entries on the proof chain from step 1. The entries will contain the content and metadata you want to store forever on the specified chain.  3. Retrieve an existing entry from the chain to verify or retrieve data      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1.0
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.blockchain.proof.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Existence Settings
 */
@ApiModel(description = "Existence Settings")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-09T04:03:56.450+01:00")
public class Settings   {
  @SerializedName("includeContentSize")
  private Boolean includeContentSize = null;

  @SerializedName("version")
  private byte[] version = null;

  /**
   * The hashing method used (CLIENT) or to use (SERVER) for the content
   */
  public enum HashAlgorithmEnum {
    @SerializedName("PLAIN")
    PLAIN("PLAIN"),
    
    @SerializedName("SHA_256")
    SHA_256("SHA_256"),
    
    @SerializedName("SHA_512")
    SHA_512("SHA_512");

    private String value;

    HashAlgorithmEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("hashAlgorithm")
  private HashAlgorithmEnum hashAlgorithm = null;

  public Settings includeContentSize(Boolean includeContentSize) {
    this.includeContentSize = includeContentSize;
    return this;
  }

   /**
   * Include the content size in the hash calculation.
   * @return includeContentSize
  **/
  @ApiModelProperty(example = "false", required = true, value = "Include the content size in the hash calculation.")
  public Boolean getIncludeContentSize() {
    return includeContentSize;
  }

  public void setIncludeContentSize(Boolean includeContentSize) {
    this.includeContentSize = includeContentSize;
  }

  public Settings version(byte[] version) {
    this.version = version;
    return this;
  }

   /**
   * The settings version (only 1 for now)
   * @return version
  **/
  @ApiModelProperty(example = "null", required = true, value = "The settings version (only 1 for now)")
  public byte[] getVersion() {
    return version;
  }

  public void setVersion(byte[] version) {
    this.version = version;
  }

  public Settings hashAlgorithm(HashAlgorithmEnum hashAlgorithm) {
    this.hashAlgorithm = hashAlgorithm;
    return this;
  }

   /**
   * The hashing method used (CLIENT) or to use (SERVER) for the content
   * @return hashAlgorithm
  **/
  @ApiModelProperty(example = "null", value = "The hashing method used (CLIENT) or to use (SERVER) for the content")
  public HashAlgorithmEnum getHashAlgorithm() {
    return hashAlgorithm;
  }

  public void setHashAlgorithm(HashAlgorithmEnum hashAlgorithm) {
    this.hashAlgorithm = hashAlgorithm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Settings settings = (Settings) o;
    return Objects.equals(this.includeContentSize, settings.includeContentSize) &&
        Objects.equals(this.version, settings.version) &&
        Objects.equals(this.hashAlgorithm, settings.hashAlgorithm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeContentSize, version, hashAlgorithm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Settings {\n");
    
    sb.append("    includeContentSize: ").append(toIndentedString(includeContentSize)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    hashAlgorithm: ").append(toIndentedString(hashAlgorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


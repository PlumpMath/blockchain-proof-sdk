/*
 * Blockchain Proof
 * <b>With the Blockchain Proof API it is easy to prove or disprove existence of (binary) data at a certain point in time. Behind the scenes it stores entries using the Factom (bitcoin), Multichain or Ethereum blockchain by means of our generic blockchain API.</b>    The flow is generally as follows:  1. Make sure a configuration is present  2. Register content by uploading a file, some content, or providing a Stream Location from the Storage API. When you upload content you have to tell the API whether the data has already been hashed or not. If not, or when uploading a file or stream location, the API will take care of the hashing  3. Verify content by uploading a file, some content, or providing a Stream Location from the Storage API. When you upload content you have to tell the API whether the data has already been hashed or not. If not, or when uploading a file or stream location, the API will take care of the hashing. You will get back whether the content has been registered previously or not      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.9
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sphereon.sdk.blockchain.proof.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sphereon.sdk.blockchain.proof.model.ChainSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Create a context configuration
 */
@ApiModel(description = "Create a context configuration")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-14T13:27:54.887+01:00")
public class CreateConfiguration {
  @JsonProperty("initialSettings")
  private ChainSettings initialSettings = null;

  /**
   * Gets or Sets accessLevel
   */
  public enum AccessLevelEnum {
    PUBLIC("PUBLIC"),
    
    PRIVATE("PRIVATE");

    private String value;

    AccessLevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccessLevelEnum fromValue(String text) {
      for (AccessLevelEnum b : AccessLevelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("accessLevel")
  private AccessLevelEnum accessLevel = null;

  @JsonProperty("context")
  private String context = null;

  @JsonProperty("name")
  private String name = null;

  public CreateConfiguration initialSettings(ChainSettings initialSettings) {
    this.initialSettings = initialSettings;
    return this;
  }

   /**
   * The initial context settings.
   * @return initialSettings
  **/
  @ApiModelProperty(required = true, value = "The initial context settings.")
  public ChainSettings getInitialSettings() {
    return initialSettings;
  }

  public void setInitialSettings(ChainSettings initialSettings) {
    this.initialSettings = initialSettings;
  }

  public CreateConfiguration accessLevel(AccessLevelEnum accessLevel) {
    this.accessLevel = accessLevel;
    return this;
  }

   /**
   * Get accessLevel
   * @return accessLevel
  **/
  @ApiModelProperty(required = true, value = "")
  public AccessLevelEnum getAccessLevel() {
    return accessLevel;
  }

  public void setAccessLevel(AccessLevelEnum accessLevel) {
    this.accessLevel = accessLevel;
  }

  public CreateConfiguration context(String context) {
    this.context = context;
    return this;
  }

   /**
   * The blockchain context.
   * @return context
  **/
  @ApiModelProperty(required = true, value = "The blockchain context.")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }

  public CreateConfiguration name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The configuration name.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The configuration name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateConfiguration createConfiguration = (CreateConfiguration) o;
    return Objects.equals(this.initialSettings, createConfiguration.initialSettings) &&
        Objects.equals(this.accessLevel, createConfiguration.accessLevel) &&
        Objects.equals(this.context, createConfiguration.context) &&
        Objects.equals(this.name, createConfiguration.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialSettings, accessLevel, context, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateConfiguration {\n");
    
    sb.append("    initialSettings: ").append(toIndentedString(initialSettings)).append("\n");
    sb.append("    accessLevel: ").append(toIndentedString(accessLevel)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


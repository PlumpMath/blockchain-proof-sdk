/*
 * Blockchain Proof
 * <b>With the Blockchain Proof API it is easy to prove existence of (binary) data at a certain point in time. Behind the scenes it stores entries using the Factom (bitcoin) blockchain by means of our generic blockchain API.</b>    The flow is generally as follows:  1. Make sure a Proof chain has been created using the /chain POST endpoint beforehand. Normally you only need one or a handful of chains, during the entiry lifetime of your proof solution. This is a relative expensive operation in terms of money.  2. Store proof entries on the proof chain from step 1. The entries will contain the content and metadata you want to store forever on the specified chain.  3. Retrieve an existing entry from the chain to verify or retrieve data      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 0.1.0
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sphereon.sdk.blockchain.proof.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sphereon.sdk.blockchain.proof.model.CommittedChain;
import com.sphereon.sdk.blockchain.proof.model.StoredSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The settings from the settings chain
 */
@ApiModel(description = "The settings from the settings chain")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-13T14:20:54.472+01:00")
public class SettingsResponse {
  @SerializedName("settingsChain")
  private CommittedChain settingsChain = null;

  @SerializedName("currentSettings")
  private StoredSettings currentSettings = null;

  @SerializedName("allSettings")
  private List<StoredSettings> allSettings = new ArrayList<StoredSettings>();

  @SerializedName("proofChain")
  private CommittedChain proofChain = null;

  public SettingsResponse settingsChain(CommittedChain settingsChain) {
    this.settingsChain = settingsChain;
    return this;
  }

   /**
   * Get settingsChain
   * @return settingsChain
  **/
  @ApiModelProperty(required = true, value = "")
  public CommittedChain getSettingsChain() {
    return settingsChain;
  }

  public void setSettingsChain(CommittedChain settingsChain) {
    this.settingsChain = settingsChain;
  }

  public SettingsResponse currentSettings(StoredSettings currentSettings) {
    this.currentSettings = currentSettings;
    return this;
  }

   /**
   * Get currentSettings
   * @return currentSettings
  **/
  @ApiModelProperty(required = true, value = "")
  public StoredSettings getCurrentSettings() {
    return currentSettings;
  }

  public void setCurrentSettings(StoredSettings currentSettings) {
    this.currentSettings = currentSettings;
  }

  public SettingsResponse allSettings(List<StoredSettings> allSettings) {
    this.allSettings = allSettings;
    return this;
  }

  public SettingsResponse addAllSettingsItem(StoredSettings allSettingsItem) {
    this.allSettings.add(allSettingsItem);
    return this;
  }

   /**
   * Get allSettings
   * @return allSettings
  **/
  @ApiModelProperty(required = true, value = "")
  public List<StoredSettings> getAllSettings() {
    return allSettings;
  }

  public void setAllSettings(List<StoredSettings> allSettings) {
    this.allSettings = allSettings;
  }

  public SettingsResponse proofChain(CommittedChain proofChain) {
    this.proofChain = proofChain;
    return this;
  }

   /**
   * Get proofChain
   * @return proofChain
  **/
  @ApiModelProperty(required = true, value = "")
  public CommittedChain getProofChain() {
    return proofChain;
  }

  public void setProofChain(CommittedChain proofChain) {
    this.proofChain = proofChain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettingsResponse settingsResponse = (SettingsResponse) o;
    return Objects.equals(this.settingsChain, settingsResponse.settingsChain) &&
        Objects.equals(this.currentSettings, settingsResponse.currentSettings) &&
        Objects.equals(this.allSettings, settingsResponse.allSettings) &&
        Objects.equals(this.proofChain, settingsResponse.proofChain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(settingsChain, currentSettings, allSettings, proofChain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettingsResponse {\n");
    
    sb.append("    settingsChain: ").append(toIndentedString(settingsChain)).append("\n");
    sb.append("    currentSettings: ").append(toIndentedString(currentSettings)).append("\n");
    sb.append("    allSettings: ").append(toIndentedString(allSettings)).append("\n");
    sb.append("    proofChain: ").append(toIndentedString(proofChain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

